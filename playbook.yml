---
- hosts: localhost
  connection: local
  vars:
    pub_key: "{{lookup('file','~/.ssh/id_rsa.pub')}}"
    docker_user: "{{lookup('env','USER')}}"

  tasks:
    - name: Create resource group
      azure_rm_resourcegroup:
        name: docker_vote_rg
        location: eastus
      register: rg
    - debug:
        var: rg


    - name: Create Security group for demo app
      azure_rm_securitygroup:
        resource_group: docker_vote_rg
        name: vote_secgroup
        rules:
          - name: Vote
            protocol: Tcp
            destination_port_range: 5000
            access: Allow
            priority: 103
            direction: Inbound

          - name: Result
            protocol: Tcp
            destination_port_range: 5001
            access: Allow
            priority: 104
            direction: Inbound

          - name: Viz
            protocol: Tcp
            destination_port_range: 8080
            access: Allow
            priority: 105
            direction: Inbound

          - name: SSH_Allow
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 102
            direction: Inbound
            source_address_prefix:
              - "193.91.144.138/32"
      register: votegrp
    

    - name: Create Virtual network
      azure_rm_virtualnetwork:
        resource_group: docker_vote_rg
        name: dockervn
        address_prefixes: "10.10.0.0/16"

    - name: Create Subnet
      azure_rm_subnet:
        resource_group: docker_vote_rg
        name: dockersub
        virtual_network: dockervn
        address_prefix: "10.10.0.0/24"

    - name: Create public ip
      azure_rm_publicipaddress:
        resource_group: docker_vote_rg
        allocation_method: Static
        name: publicip001
      register: publicip

    - name: Show public IP
      debug:
        msg: "{{publicip.state.ip_address}}"

    - name: Create Network Interface for Public Net
      azure_rm_networkinterface:
        resource_group: docker_vote_rg
        name: master_public_if
        virtual_network: dockervn
        subnet: dockersub
        public_ip_name: publicip001
        security_group: vote_secgroup


    - name: Create Network Interface for Private network master
      azure_rm_networkinterface:
        resource_group: docker_vote_rg
        name: azmaster_private_if2
        virtual_network: dockervn
        subnet: dockersub
        ip_configurations:
           - private_ip_allocation_method: Static
             name: azmaster_private_if2
             private_ip_address: 10.10.0.5

    - name: Create Network Interface for Private network node1
      azure_rm_networkinterface:
        resource_group: docker_vote_rg
        name: aznode1_private_if
        virtual_network: dockervn
        subnet: dockersub
        ip_configurations:
           - private_ip_allocation_method: Static
             name: aznode1_private_if
             private_ip_address: 10.10.0.6
        
    - name: Create Network Interface for Private network node2
      azure_rm_networkinterface:
        resource_group: docker_vote_rg
        name: aznode2_private_if
        virtual_network: dockervn
        subnet: dockersub
        ip_configurations:
           - private_ip_allocation_method: Static
             name: aznode2_private_if
             private_ip_address: 10.10.0.7
        
    - name: SecGroup
      debug:
        msg: "{{votegrp}}"

    - name: Create Storage 
      azure_rm_storageaccount:
        resource_group: docker_vote_rg
        name: ansibleaccount001
        account_type: Standard_LRS


    - name: Create Virtual machine master
      azure_rm_virtualmachine:
        resource_group: docker_vote_rg
        vm_size: Standard_B1s
        name: azmaster
        #os_disk_size_gb: 16
        storage_account: ansibleaccount001
        storage_container: ansiblevm001
        storage_blob: mastervm001.vhd
        network_interfaces: 
          - master_public_if
          - azmaster_private_if2
        admin_username: "{{docker_user}}"
        ssh_password_enabled: false
        ssh_public_keys: 
          - path:  "/home/{{docker_user}}/.ssh/authorized_keys"
            key_data: "{{pub_key}}"
        image: 
          offer: UbuntuServer
          publisher: Canonical
          sku: '18.04-LTS'
          version: latest

    - name: Create Virtual machine aznode1
      azure_rm_virtualmachine:
        resource_group: docker_vote_rg
        vm_size: Standard_B1s
        name: aznode1
        storage_account: ansibleaccount001
        storage_container: ansiblevm001
        storage_blob: node1vm001.vhd
        network_interfaces: 
          - aznode1_private_if
        admin_username: "{{docker_user}}"
        ssh_password_enabled: false
        ssh_public_keys: 
          - path:  "/home/{{docker_user}}/.ssh/authorized_keys"
            key_data: "{{pub_key}}"
        image: 
          offer: UbuntuServer
          publisher: Canonical
          sku: '18.04-LTS'
          version: latest

    - name: Create Virtual machine aznode2
      azure_rm_virtualmachine:
        resource_group: docker_vote_rg
        vm_size: Standard_B1ls
        name: aznode2
        storage_account: ansibleaccount001
        storage_container: ansiblevm001
        storage_blob: node2vm001.vhd
        network_interfaces: 
          - aznode2_private_if
        admin_username: "{{docker_user}}"
        ssh_password_enabled: false
        ssh_public_keys: 
          - path:  "/home/{{docker_user}}/.ssh/authorized_keys"
            key_data: "{{pub_key}}"
        image: 
          offer: UbuntuServer
          publisher: Canonical
          sku: '18.04-LTS'
          version: latest

    - name: Create/update ssh config
      blockinfile:
         path: ~/.ssh/config
         block: |
            Host    azmaster
            ProxyCommand ssh -W %h:%p "{{docker_user}}@{{publicip.state.ip_address}}"
            StrictHostKeyChecking=no
            Host    aznode1
            ProxyCommand ssh -W %h:%p "{{docker_user}}@{{publicip.state.ip_address}}"
            StrictHostKeyChecking=no
            Host    aznode2
            ProxyCommand ssh -W %h:%p "{{docker_user}}@{{publicip.state.ip_address}}"
            StrictHostKeyChecking=no

 
